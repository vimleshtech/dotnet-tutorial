@model IEnumerable<EBMS.Models.state_list>

@{
    ViewBag.Title = "state_list";
    Layout = "~/Views/Shared/_websoft.cshtml";
}

<style>
    .modal12 {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        padding-top: 100px; /* Location of the box */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }

    /* Modal Content */
    .modal12-content {
        background-color: #fefefe;
        margin: auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
    }

    /* The Close Button */
    .close12 {
        color: #aaaaaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close12:hover,
        .close12:focus {
            color: #000;
            text-decoration: none;
            cursor: pointer;
        }
</style>
<h2 style="text-align:center;">State List</h2>

<div class="container">
    <table class="table table-striped table-bordered table-hover table-responsive-md">
        <thead class="table-light">
            <tr>
                <th scope="col"> State ID </th>
                <th scope="col"> State Code </th>
                <th scope="col"> State Name </th>
                <th scope="col"> Actions </th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.state_id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.state_code)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.state_name)
                    </td>
                    <td>

                        @Html.ActionLink("Edit", "Edit", new { id = item.state_id }) |

                        @*@Html.ActionLink("Details", "Details", new { id = item.state_id}) |*@
                        <input id="myBtn" type="button" value="Details" onclick="hideShow(this)" data-assigned-id="@item.state_id" />
                        @Html.ActionLink("Delete", "Delete", new { id = item.state_id })
                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>
<div id="myModal" class="modal12">

    <!-- Modal content -->
    <div class="modal12-content">
        <span class="close12">&times;</span>
        <p>Some text in the Modal..</p>
        <p id="content">

        </p>
    </div>

</div>

<script>


    var modal = document.getElementById("myModal");
    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close12")[0];

    function hideShow(uh) {

        var id = uh.data('assigned-id');
        alert(id);
               
                // Get the button that opens the modal
                //var btn = document.getElementById("myBtn");

                
                // When the user clicks the button, open the modal 
                //btn.onclick = function () {
                    modal.style.display = "block";
                    //}

        document.getElementById('content').innerHTML = uh;

    }

    // When the user clicks on <span> (x), close the modal
    span.onclick = function () {
        modal.style.display = "none";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
        }

    
</script>


